// Copyright 2025 Vahid Mardani
/*
 * This file is part of chttp.
 *  chttp is free software: you can redistribute it and/or modify it under
 *  the terms of the GNU General Public License as published by the Free
 *  Software Foundation, either version 3 of the License, or (at your option)
 *  any later version.
 *
 *  chttp is distributed in the hope that it will be useful, but WITHOUT ANY
 *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 *  details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with chttp. If not, see <https://www.gnu.org/licenses/>.
 *
 *  Author: Vahid Mardani <vahid.mardani@gmail.com>
 */
#ifndef INCLUDE_CHTTP_H_IN_
#define INCLUDE_CHTTP_H_IN_


/* standard */
#include <stddef.h>


#cmakedefine CONFIG_CHTTP_REQUEST_BUFFSIZE @CONFIG_CHTTP_REQUEST_BUFFSIZE@
#cmakedefine CONFIG_CHTTP_RESPONSE_BUFFSIZE @CONFIG_CHTTP_RESPONSE_BUFFSIZE@
#cmakedefine CONFIG_CHTTP_REQUEST_HEADERSMAX @CONFIG_CHTTP_REQUEST_HEADERSMAX@


typedef int httpstatus_t;
struct chttp_store {
    char *backend;
    size_t size;
    size_t len;
};


struct chttp_responseview {
    int status;
    const char *text;
    const char *protocol;

    unsigned short headerscount;
    char *headers[CONFIG_CHTTP_REQUEST_HEADERSMAX];
};


#define CHTTP_RESPONSE_STORE_BUFFSIZE \
    (CONFIG_CHTTP_RESPONSE_BUFFSIZE - sizeof(struct chttp_responseview) \
        - sizeof(struct chttp_store))


struct chttp_response {
    struct chttp_responseview;
    struct chttp_store store;
    char storebuff[CHTTP_RESPONSE_STORE_BUFFSIZE];
};


struct chttp_requestview {
    char *verb;
    char *path;
    char *query;
    char *protocol;

    unsigned short headerscount;
    char *headers[CONFIG_CHTTP_REQUEST_HEADERSMAX];
};


#define CHTTP_REQUEST_STORE_BUFFSIZE \
    (CONFIG_CHTTP_REQUEST_BUFFSIZE - sizeof(struct chttp_requestview) \
        - sizeof(struct chttp_store))


struct chttp_request {
    struct chttp_requestview;
    struct chttp_store store;
    char storebuff[CHTTP_REQUEST_STORE_BUFFSIZE];
};


httpstatus_t
chttp_request_frombuffer(struct chttp_request *req, char *header, 
        size_t size);


httpstatus_t
chttp_request_fromstring(struct chttp_request *req, const char *fmt, ...);


int
chttp_response_start(struct chttp_response *resp, int status, char *text);


int
chttp_response_tobuff(struct chttp_response *resp, char *buff, int *len);


#endif  // INCLUDE_CHTTP_H_IN_
