// Copyright 2025 Vahid Mardani
/*
 * This file is part of chttp.
 *  chttp is free software: you can redistribute it and/or modify it under
 *  the terms of the GNU General Public License as published by the Free
 *  Software Foundation, either version 3 of the License, or (at your option)
 *  any later version.
 *
 *  chttp is distributed in the hope that it will be useful, but WITHOUT ANY
 *  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 *  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 *  details.
 *
 *  You should have received a copy of the GNU General Public License along
 *  with chttp. If not, see <https://www.gnu.org/licenses/>.
 *
 *  Author: Vahid Mardani <vahid.mardani@gmail.com>
 */
#ifndef INCLUDE_CHTTP_H_IN_
#define INCLUDE_CHTTP_H_IN_


/* standard */
#include <stdint.h>
#include <stdlib.h>

/* system */
#include <sys/types.h>


#cmakedefine CONFIG_CHTTP_REQUEST_HEADERSMAX @CONFIG_CHTTP_REQUEST_HEADERSMAX@
#cmakedefine CONFIG_SYSTEM_PAGESIZE @CONFIG_SYSTEM_PAGESIZE@


/* statuses */
typedef int chttp_status_t;
enum chttp_status {
    CHTTP_STATUS_200_OK = 200,
    CHTTP_STATUS_400_BADREQUEST = 400,
    CHTTP_STATUS_404_NOTFOUND = 404,
};


/* store */
#define store_avail(s) ((s).size - (s).len)
struct chttp_store {
    char *backend;
    size_t size;
    size_t len;
};


struct chttp_response {
    char *header;
    unsigned int headerlen;

    char *body;
    unsigned int bodylen;
};


struct chttp_request {
    const char *verb;
    const char *path;
    const char *query;
    const char *protocol;
    const char *contenttype;
    const char *charset;
    const char *expect;
    const char *useragent;
    ssize_t contentlength;

    unsigned short headerscount;
    const char *headers[CONFIG_CHTTP_REQUEST_HEADERSMAX];

    struct chttp_response response;
    struct chttp_store store;
    char storebuff[];
};


const char *
chttp_status_text(chttp_status_t status);


struct chttp_request *
chttp_request_new(uint8_t pages);


chttp_status_t
chttp_request_parse(struct chttp_request *r, char *header, size_t size);


#endif  // INCLUDE_CHTTP_H_IN_
